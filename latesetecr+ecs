pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID="220080856178"
        AWS_DEFAULT_REGION="us-east-1" 
        IMAGE_TAG="${env.BUILD_ID}"
        REPOSITORY_URI = "220080856178.dkr.ecr.us-east-1.amazonaws.com/ecr-sahil"
        ECR_REGISTRY = '220080856178.dkr.ecr.us-east-1.amazonaws.com/ecr-sahil'
        PATH = "/usr/local/bin/:${env.PATH}"
    }
    
    stages {
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/sahil-sheikh-17/myPythonDockerRepo.git']]])     
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build --force-rm -t "220080856178.dkr.ecr.us-east-1.amazonaws.com/ecr-sahil:latest" .'
                sh 'docker image ls'
            }
        }
        stage('Push Image to ECR Repo') {
            steps {
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin --password-stdin 220080856178.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker push 220080856178.dkr.ecr.us-east-1.amazonaws.com/ecr-sahil:latest'
            }
        } 
        stage('Terraform destroy') {
            steps{
            sh label: 'filename', script: 'terraform destroy --auto-approve'
                 }
    }
        stage('Terraform Init') {
            steps{
            sh label: 'filename', script: 'terraform init'
                 }
    }    
        stage('Terraform apply') {
            steps{
            sh label: 'filename', script: 'terraform apply -lock=false --auto-approve'
      }
    }
  }
    }
